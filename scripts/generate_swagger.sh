#!/bin/bash

# Swagger вгИВёю ВЃЮВё▒ ВіцьЂгвдйьіИ

# ВѓгВџЕв▓Ћ ВХюваЦ ьЋеВѕў
show_usage() {
    echo "­ЪЊџ Swagger вгИВёю ВЃЮВё▒ ВіцьЂгвдйьіИ"
    echo ""
    echo "ВѓгВџЕв▓Ћ:"
    echo "  $0 [ВўхВЁў]"
    echo ""
    echo "ВўхВЁў:"
    echo "  -h, --help              вЈёВЏђвДљ ВХюваЦ"
    echo "  -e, --exclude DIRS      ВаюВЎИьЋа вћћваЅьєавдг (ВЅ╝ьЉювАю ЖхгвХё)"
    echo "  -i, --include DIRS      ьЈгьЋеьЋа вћћваЅьєавдгвДї (ВЅ╝ьЉювАю ЖхгвХё)"
    echo "  -o, --output DIR        ВХюваЦ вћћваЅьєавдг (ЖИ░в│ИЖ░њ: docs)"
    echo ""
    echo "ьЎўЖ▓й в│ђВѕў:"
    echo "  SWAGGER_EXCLUDE_DIRS    ВаюВЎИьЋа вћћваЅьєавдг (ВЅ╝ьЉювАю ЖхгвХё)"
    echo "  SWAGGER_INCLUDE_DIRS    ьЈгьЋеьЋа вћћваЅьєавдгвДї (ВЅ╝ьЉювАю ЖхгвХё)"
    echo "  SWAGGER_OUTPUT_DIR      ВХюваЦ вћћваЅьєавдг"
    echo ""
    echo "ВўѕВІю:"
    echo "  $0                                    # вфевЊа вЈёвЕћВЮИ ьЈгьЋе"
    echo "  $0 -e test,mock                       # test, mock вћћваЅьєавдг ВаюВЎИ"
    echo "  $0 -i strategy,portfolio              # strategy, portfolioвДї ьЈгьЋе"
    echo "  $0 -o custom_docs                     # custom_docs вћћваЅьєавдгВЌљ ВХюваЦ"
    echo ""
}

# вфЁва╣ьќЅ ВЮИВѕў ьїїВІ▒
OUTPUT_DIR="docs"
EXCLUDE_DIRS=("test" "mock" "internal")  # ЖИ░в│И ВаюВЎИ вћћваЅьєавдг
INCLUDE_ONLY=""  # ьі╣ВаЋ вћћваЅьєавдгвДї ьЈгьЋе (в╣ёВќ┤ВъѕВю╝вЕ┤ вфевЊа вћћваЅьєавдг ьЈгьЋе)

while [[ $# -gt 0 ]]; do
    case $1 in
        -h|--help)
            show_usage
            exit 0
            ;;
        -e|--exclude)
            IFS=',' read -ra EXCLUDE_DIRS <<< "$2"
            shift 2
            ;;
        -i|--include)
            INCLUDE_ONLY="$2"
            shift 2
            ;;
        -o|--output)
            OUTPUT_DIR="$2"
            shift 2
            ;;
        *)
            echo "РЮї ВЋї Вѕў ВЌєвіћ ВўхВЁў: $1"
            show_usage
            exit 1
            ;;
    esac
done

# ьЎўЖ▓й в│ђВѕўвАю ВёцВаЋвљю Ж░њВЮ┤ ВъѕВю╝вЕ┤ вЇ«Вќ┤ВЊ░ЖИ░
if [ -n "$SWAGGER_EXCLUDE_DIRS" ]; then
    IFS=',' read -ra EXCLUDE_DIRS <<< "$SWAGGER_EXCLUDE_DIRS"
fi

if [ -n "$SWAGGER_INCLUDE_DIRS" ]; then
    INCLUDE_ONLY="$SWAGGER_INCLUDE_DIRS"
fi

if [ -n "$SWAGGER_OUTPUT_DIR" ]; then
    OUTPUT_DIR="$SWAGGER_OUTPUT_DIR"
fi

echo "­ЪЊџ Swagger вгИВёю ВЃЮВё▒ ВІюВъЉ..."
echo "РџЎ№ИЈ  ВёцВаЋ:"
echo "  - ВХюваЦ вћћваЅьєавдг: $OUTPUT_DIR"
echo "  - ВаюВЎИ вћћваЅьєавдг: ${EXCLUDE_DIRS[*]}"
if [ -n "$INCLUDE_ONLY" ]; then
    echo "  - ьЈгьЋе вћћваЅьєавдгвДї: $INCLUDE_ONLY"
fi
echo ""

# swag CLI Ж▓йвАю ВёцВаЋ
SWAG_PATH=""
if command -v swag &> /dev/null; then
    SWAG_PATH="swag"
elif [ -f "$(go env GOPATH)/bin/swag" ]; then
    SWAG_PATH="$(go env GOPATH)/bin/swag"
else
    echo "РЮї swag CLIЖ░ђ ВёцВ╣ўвљўВДђ ВЋіВЋўВіхвІѕвІц."
    echo "вІцВЮї вфЁва╣Вќ┤вАю ВёцВ╣ўьЋўВёИВџћ:"
    echo "go install github.com/swaggo/swag/cmd/swag@latest"
    exit 1
fi

echo "­ЪћД swag Ж▓йвАю: $SWAG_PATH"

# ЖИ░ВА┤ docs вћћваЅьєавдг ВѓГВаю ьЏё ВЃѕвАю ВЃЮВё▒
echo "­ЪД╣ ЖИ░ВА┤ Swagger вгИВёю ВѓГВаю ВцЉ..."
rm -rf "$OUTPUT_DIR"
mkdir -p "$OUTPUT_DIR"
echo "­ЪЊЂ $OUTPUT_DIR вћћваЅьєавдг ВЃЮВё▒ ВЎёвБї"

# pkg/domain ьЋўВюёВЮў вфевЊа вћћваЅьєавдг вЈЎВаЂ ВіцВ║ћ
echo "­ЪћЇ pkg/domain вћћваЅьєавдг ВіцВ║ћ ВцЉ..."
DOMAIN_DIRS="cmd/trader"

# pkg/domain вћћваЅьєавдгЖ░ђ ВА┤ВъгьЋўвіћВДђ ьЎЋВЮИ
if [ -d "pkg/domain" ]; then
    # pkg/domain ьЋўВюёВЮў вфевЊа вћћваЅьєавдгвЦ╝ В░ЙВЋёВёю ВЅ╝ьЉювАю ЖхгвХёвљю вгИВъљВЌ┤вАю вДївЊд
    for dir in pkg/domain/*/; do
        if [ -d "$dir" ]; then
            dir_name=$(basename "$dir")
            
            # ВаюВЎИьЋа вћћваЅьєавдгВЮИВДђ ьЎЋВЮИ
            should_exclude=false
            for exclude_dir in "${EXCLUDE_DIRS[@]}"; do
                if [ "$dir_name" = "$exclude_dir" ]; then
                    should_exclude=true
                    break
                fi
            done
            
            # ьі╣ВаЋ вћћваЅьєавдгвДї ьЈгьЋеьЋўвіћ Ж▓йВџ░
            if [ -n "$INCLUDE_ONLY" ]; then
                should_include=false
                for include_dir in $INCLUDE_ONLY; do
                    if [ "$dir_name" = "$include_dir" ]; then
                        should_include=true
                        break
                    fi
                done
                if [ "$should_include" = false ]; then
                    echo "РЈГ№ИЈ  ВаюВЎИвље (INCLUDE_ONLY): $dir_name"
                    continue
                fi
            fi
            
            # ВаюВЎИьЋа вћћваЅьєавдгЖ░ђ ВЋёвІї Ж▓йВџ░ВЌљвДї ВХћЖ░ђ
            if [ "$should_exclude" = false ]; then
                echo "­ЪЊѓ в░юЖ▓гвљю вЈёвЕћВЮИ: $dir_name"
                DOMAIN_DIRS="$DOMAIN_DIRS,$dir"
            else
                echo "РЈГ№ИЈ  ВаюВЎИвље (EXCLUDE_DIRS): $dir_name"
            fi
        fi
    done
else
    echo "Рџа№ИЈ  pkg/domain вћћваЅьєавдгЖ░ђ ВА┤ВъгьЋўВДђ ВЋіВіхвІѕвІц."
fi

echo "­ЪЊІ ВіцВ║ћвљю вћћваЅьєавдг: $DOMAIN_DIRS"

# Swagger вгИВёю ВЃЮВё▒
echo "­Ъћё Swagger вгИВёю ВЃЮВё▒ ВцЉ..."
$SWAG_PATH init \
    --dir "$DOMAIN_DIRS" \
    --output "$OUTPUT_DIR" \
    --generalInfo main.go \
    --propertyStrategy snakecase \
    --parseDependency \
    --parseInternal

if [ $? -eq 0 ]; then
    echo "РюЁ Swagger вгИВёю ВЃЮВё▒ ВЎёвБї!"
    echo "­ЪЊЂ ВЃЮВё▒вљю ьїїВЮ╝:"
    ls -la "$OUTPUT_DIR"/
    echo ""
    echo "­Ъїљ Swagger UI ВаЉВєЇ: http://localhost:8080/swagger/"
    echo ""
    echo "­ЪЊі ВіцВ║ћвљю вЈёвЕћВЮИ вћћваЅьєавдг:"
    echo "$DOMAIN_DIRS" | tr ',' '\n' | grep "pkg/domain" | sed 's|pkg/domain/||' | sed 's|/||' || true
    echo ""
    echo "РџЎ№ИЈ  ВёцВаЋ ВаЋв│┤:"
    echo "  - ВХюваЦ вћћваЅьєавдг: $OUTPUT_DIR"
    echo "  - ВаюВЎИвљю вћћваЅьєавдг: ${EXCLUDE_DIRS[*]}"
    if [ -n "$INCLUDE_ONLY" ]; then
        echo "  - ьЈгьЋевљю вћћваЅьєавдгвДї: $INCLUDE_ONLY"
    fi
else
    echo "РЮї Swagger вгИВёю ВЃЮВё▒ ВІцьїе!"
    exit 1
fi 